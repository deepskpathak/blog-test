'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitBase = require('react-uikit-base');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Article = function Article(props) {
  // CSS classes
  var cssClassNames = _reactUikitBase.helpers.cleanClasses(['uk-article', props.classes, props.className]);

  var ignoreProps = ['children', 'classes', 'kitid', 'lead', 'meta', 'title'];

  // Remove non valid html attributes
  var cleanProps = _reactUikitBase.helpers.cleanProps(ignoreProps)(props);

  // Elements
  var title = props.title ? _react2.default.createElement(
    'h1',
    { className: 'uk-article-title' },
    props.title
  ) : null;
  var meta = props.meta ? _react2.default.createElement(
    'p',
    { className: 'uk-article-meta' },
    props.meta
  ) : null;
  var lead = props.lead ? _react2.default.createElement(
    'p',
    { className: 'uk-article-lead' },
    props.lead
  ) : null;

  // Return Component
  return _react2.default.createElement(
    'article',
    _extends({}, cleanProps, (0, _reactUikitBase.events)(props), {
      className: cssClassNames,
      'data-kitid': props.kitid
    }),
    title,
    meta,
    lead,
    props.children
  );
};

Article.propTypes = {
  children: _react2.default.PropTypes.any,
  className: _react2.default.PropTypes.string,
  classes: _react2.default.PropTypes.array,
  kitid: _react2.default.PropTypes.string,
  lead: _react2.default.PropTypes.string,
  meta: _react2.default.PropTypes.string,
  title: _react2.default.PropTypes.string
};

exports.default = (0, _reactUikitBase.base)(Article);