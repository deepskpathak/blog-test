'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactUikitBase = require('react-uikit-base');

var _ufunc = require('ufunc');

var _ufunc2 = _interopRequireDefault(_ufunc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Comment = function Comment(props) {
  // CSS classes
  var cssClassNames = _reactUikitBase.helpers.cleanClasses(['uk-comment', props.primary ? 'uk-comment-primary' : null, props.classes, props.className]);

  // Remove non valid html attributes
  var ignoreProps = ['avatar', 'body', 'children', 'classes', 'items', 'kitid', 'meta', 'primary', 'title'];

  var cleanProps = _reactUikitBase.helpers.cleanProps(ignoreProps)(props);

  // Elements
  var avatar = _ufunc2.default.maybeIf(_react2.default.createElement('img', {
    className: 'uk-comment-avatar',
    src: props.avatar ? props.avatar.src : null,
    alt: props.avatar ? props.avatar.alt : null
  }))(props.avatar);

  var title = _ufunc2.default.maybeIf(_react2.default.createElement(
    'h4',
    { className: 'uk-comment-title' },
    props.title
  ))(props.title);

  var meta = _ufunc2.default.maybeIf(_react2.default.createElement(
    'div',
    { className: 'uk-comment-meta' },
    props.meta
  ))(props.meta);

  var header = _react2.default.createElement(
    'header',
    {
      className: 'uk-comment-header'
    },
    avatar,
    title,
    meta
  );

  var body = _react2.default.createElement(
    'div',
    {
      className: 'uk-comment-body' },
    props.body,
    props.children
  );

  // Return Component
  return _react2.default.createElement(
    'article',
    _extends({}, cleanProps, (0, _reactUikitBase.events)(props), {
      className: cssClassNames,
      'data-kitid': props.kitid
    }),
    header,
    body
  );
};

Comment.propTypes = {
  avatar: _react2.default.PropTypes.object,
  body: _react2.default.PropTypes.string,
  children: _react2.default.PropTypes.any,
  className: _react2.default.PropTypes.string,
  classes: _react2.default.PropTypes.array,
  items: _react2.default.PropTypes.object,
  kitid: _react2.default.PropTypes.string,
  meta: _react2.default.PropTypes.any,
  primary: _react2.default.PropTypes.bool,
  title: _react2.default.PropTypes.string
};

exports.default = (0, _reactUikitBase.base)(Comment);